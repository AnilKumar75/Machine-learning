{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled4.ipynb",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/AnilKumar75/Machine-learning/blob/master/Multiple%20Linear%20Regression\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WaHjOAIIMpIW",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#importing needed packeges\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import pylab as pl\n",
        "import numpy as np\n",
        "%matplotlib inline"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "72EhHwSPM1Ou",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "11cc004e-c0a4-41cb-f893-52d3e9dc4f50"
      },
      "source": [
        "#downloading data from site.\n",
        "!wget -O FuelConsumption.csv https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/ML0101ENv3/labs/FuelConsumptionCo2.csv\n"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "--2019-12-02 16:24:51--  https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/ML0101ENv3/labs/FuelConsumptionCo2.csv\n",
            "Resolving s3-api.us-geo.objectstorage.softlayer.net (s3-api.us-geo.objectstorage.softlayer.net)... 67.228.254.196\n",
            "Connecting to s3-api.us-geo.objectstorage.softlayer.net (s3-api.us-geo.objectstorage.softlayer.net)|67.228.254.196|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 72629 (71K) [text/csv]\n",
            "Saving to: ‘FuelConsumption.csv’\n",
            "\n",
            "\rFuelConsumption.csv   0%[                    ]       0  --.-KB/s               \rFuelConsumption.csv 100%[===================>]  70.93K  --.-KB/s    in 0.04s   \n",
            "\n",
            "2019-12-02 16:24:52 (1.59 MB/s) - ‘FuelConsumption.csv’ saved [72629/72629]\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "F_698qnfNC50",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 275
        },
        "outputId": "7ea118f1-35d7-4b1c-ae14-42c954538a26"
      },
      "source": [
        "#Reading the data in\n",
        "df = pd.read_csv(\"FuelConsumption.csv\")\n",
        "\n",
        "# take a look at the dataset\n",
        "df.head()"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MODELYEAR</th>\n",
              "      <th>MAKE</th>\n",
              "      <th>MODEL</th>\n",
              "      <th>VEHICLECLASS</th>\n",
              "      <th>ENGINESIZE</th>\n",
              "      <th>CYLINDERS</th>\n",
              "      <th>TRANSMISSION</th>\n",
              "      <th>FUELTYPE</th>\n",
              "      <th>FUELCONSUMPTION_CITY</th>\n",
              "      <th>FUELCONSUMPTION_HWY</th>\n",
              "      <th>FUELCONSUMPTION_COMB</th>\n",
              "      <th>FUELCONSUMPTION_COMB_MPG</th>\n",
              "      <th>CO2EMISSIONS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2014</td>\n",
              "      <td>ACURA</td>\n",
              "      <td>ILX</td>\n",
              "      <td>COMPACT</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4</td>\n",
              "      <td>AS5</td>\n",
              "      <td>Z</td>\n",
              "      <td>9.9</td>\n",
              "      <td>6.7</td>\n",
              "      <td>8.5</td>\n",
              "      <td>33</td>\n",
              "      <td>196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2014</td>\n",
              "      <td>ACURA</td>\n",
              "      <td>ILX</td>\n",
              "      <td>COMPACT</td>\n",
              "      <td>2.4</td>\n",
              "      <td>4</td>\n",
              "      <td>M6</td>\n",
              "      <td>Z</td>\n",
              "      <td>11.2</td>\n",
              "      <td>7.7</td>\n",
              "      <td>9.6</td>\n",
              "      <td>29</td>\n",
              "      <td>221</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2014</td>\n",
              "      <td>ACURA</td>\n",
              "      <td>ILX HYBRID</td>\n",
              "      <td>COMPACT</td>\n",
              "      <td>1.5</td>\n",
              "      <td>4</td>\n",
              "      <td>AV7</td>\n",
              "      <td>Z</td>\n",
              "      <td>6.0</td>\n",
              "      <td>5.8</td>\n",
              "      <td>5.9</td>\n",
              "      <td>48</td>\n",
              "      <td>136</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2014</td>\n",
              "      <td>ACURA</td>\n",
              "      <td>MDX 4WD</td>\n",
              "      <td>SUV - SMALL</td>\n",
              "      <td>3.5</td>\n",
              "      <td>6</td>\n",
              "      <td>AS6</td>\n",
              "      <td>Z</td>\n",
              "      <td>12.7</td>\n",
              "      <td>9.1</td>\n",
              "      <td>11.1</td>\n",
              "      <td>25</td>\n",
              "      <td>255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2014</td>\n",
              "      <td>ACURA</td>\n",
              "      <td>RDX AWD</td>\n",
              "      <td>SUV - SMALL</td>\n",
              "      <td>3.5</td>\n",
              "      <td>6</td>\n",
              "      <td>AS6</td>\n",
              "      <td>Z</td>\n",
              "      <td>12.1</td>\n",
              "      <td>8.7</td>\n",
              "      <td>10.6</td>\n",
              "      <td>27</td>\n",
              "      <td>244</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   MODELYEAR   MAKE  ... FUELCONSUMPTION_COMB_MPG CO2EMISSIONS\n",
              "0       2014  ACURA  ...                       33          196\n",
              "1       2014  ACURA  ...                       29          221\n",
              "2       2014  ACURA  ...                       48          136\n",
              "3       2014  ACURA  ...                       25          255\n",
              "4       2014  ACURA  ...                       27          244\n",
              "\n",
              "[5 rows x 13 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "32JOZwwmNN5U",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 328
        },
        "outputId": "5a2f5fee-708b-4ebb-a887-3d7cc0c3a371"
      },
      "source": [
        "# i am selecting some features which i want use in regression\n",
        "cdf = df[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_CITY','FUELCONSUMPTION_HWY','FUELCONSUMPTION_COMB','CO2EMISSIONS']]\n",
        "cdf.head(9)"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ENGINESIZE</th>\n",
              "      <th>CYLINDERS</th>\n",
              "      <th>FUELCONSUMPTION_CITY</th>\n",
              "      <th>FUELCONSUMPTION_HWY</th>\n",
              "      <th>FUELCONSUMPTION_COMB</th>\n",
              "      <th>CO2EMISSIONS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2.0</td>\n",
              "      <td>4</td>\n",
              "      <td>9.9</td>\n",
              "      <td>6.7</td>\n",
              "      <td>8.5</td>\n",
              "      <td>196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.4</td>\n",
              "      <td>4</td>\n",
              "      <td>11.2</td>\n",
              "      <td>7.7</td>\n",
              "      <td>9.6</td>\n",
              "      <td>221</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.5</td>\n",
              "      <td>4</td>\n",
              "      <td>6.0</td>\n",
              "      <td>5.8</td>\n",
              "      <td>5.9</td>\n",
              "      <td>136</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3.5</td>\n",
              "      <td>6</td>\n",
              "      <td>12.7</td>\n",
              "      <td>9.1</td>\n",
              "      <td>11.1</td>\n",
              "      <td>255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3.5</td>\n",
              "      <td>6</td>\n",
              "      <td>12.1</td>\n",
              "      <td>8.7</td>\n",
              "      <td>10.6</td>\n",
              "      <td>244</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>3.5</td>\n",
              "      <td>6</td>\n",
              "      <td>11.9</td>\n",
              "      <td>7.7</td>\n",
              "      <td>10.0</td>\n",
              "      <td>230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>3.5</td>\n",
              "      <td>6</td>\n",
              "      <td>11.8</td>\n",
              "      <td>8.1</td>\n",
              "      <td>10.1</td>\n",
              "      <td>232</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>3.7</td>\n",
              "      <td>6</td>\n",
              "      <td>12.8</td>\n",
              "      <td>9.0</td>\n",
              "      <td>11.1</td>\n",
              "      <td>255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>3.7</td>\n",
              "      <td>6</td>\n",
              "      <td>13.4</td>\n",
              "      <td>9.5</td>\n",
              "      <td>11.6</td>\n",
              "      <td>267</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   ENGINESIZE  CYLINDERS  ...  FUELCONSUMPTION_COMB  CO2EMISSIONS\n",
              "0         2.0          4  ...                   8.5           196\n",
              "1         2.4          4  ...                   9.6           221\n",
              "2         1.5          4  ...                   5.9           136\n",
              "3         3.5          6  ...                  11.1           255\n",
              "4         3.5          6  ...                  10.6           244\n",
              "5         3.5          6  ...                  10.0           230\n",
              "6         3.5          6  ...                  10.1           232\n",
              "7         3.7          6  ...                  11.1           255\n",
              "8         3.7          6  ...                  11.6           267\n",
              "\n",
              "[9 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4aDb5srvNcNV",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "outputId": "1ec9362f-df08-4304-81bf-a93608fd5b8b"
      },
      "source": [
        "# lets plot the Emission values with respect to Engine size\n",
        "plt.scatter(cdf.ENGINESIZE, cdf.CO2EMISSIONS,  color='blue')\n",
        "plt.xlabel(\"Engine size\")\n",
        "plt.ylabel(\"Emission\")\n",
        "plt.show()"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYUAAAEHCAYAAABBW1qbAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAgAElEQVR4nO3df5xddX3n8ddnfgTyQ40MWTYSMkMV\nscFWhFHpYruUoNXoQ2gfavUxShZ5NJqwXdS1Ksuurd1N1/7YWtw+EpvKj2imWlftygNTLb9sV4va\nBAFJ0DVKAmFRAgoSg2DCZ/843ztz5sw595xz7zn33Jl5Px+P85h7v+fH/c5N5nzO97e5OyIiIgAD\nTWdARET6h4KCiIhMUVAQEZEpCgoiIjJFQUFERKYoKIiIyJShOi9uZvuBx4FjwFF3HzezE4C/BcaA\n/cAb3f3HZmbAVcA64Ajw79z99nbXP/HEE31sbKy2/IuIzEe7d+9+2N1XpO2rNSgEv+7uD8fevx+4\n2d0/ZGbvD+/fB7waOC1sLwO2hp+ZxsbG2LVrVz25FhGZp8zsQNa+JqqPLgS2h9fbgYti6R/3yNeA\n5Wa2soH8iYgsWHUHBQf+wcx2m9mGkHaSuz8YXv8AOCm8Phm4P3buwZAmIiI9Unf10cvd/QEz+1fA\njWb27fhOd3czKzXPRgguGwBWr15dXU5FRKTekoK7PxB+PgT8HfBS4IetaqHw86Fw+APAKbHTV4W0\n5DW3ufu4u4+vWJHaTiIiIh2qLSiY2VIze0brNfBK4G7gemB9OGw98Pnw+nrgYoucAzwWq2YSEZEe\nqLOkcBLwFTO7E/gG8AV3/yLwIeAVZvZd4ILwHmAn8H1gH/DXwKYa8yYic8zkJIyNwcBA9HNysukc\nzU+1tSm4+/eBF6WkPwKsTUl34LK68iMic9fkJGzYAEeORO8PHIjeA0xMNJev+UgjmkWk71155XRA\naDlyJEqXaikoiEjfu+++cunSOQUFEel7Wb3P1Su9egoKItL3Nm+GJUtmpi1ZEqVLtRQURKTvTUzA\ntm0wOgpm0c9t29TIXIdeTIgnItK1iQkFgV5QSUFERKYoKIiIyBQFBRERmaKgICIiUxQURERkioKC\niIhMUVAQEZEpCgoiIjJFQUFERKYoKIiIyBQFBRERmVJ7UDCzQTP7ppndEN5fZ2b3mtkdYTszpJuZ\nfcTM9pnZXWZ2Vt15ExGRmXoxId7lwD3AM2Npv+fun0kc92rgtLC9DNgafoqISI/UWlIws1XAa4CP\nFTj8QuDjHvkasNzMVtaZPxERmanu6qO/AN4LPJ1I3xyqiD5sZseFtJOB+2PHHAxpIiLSI7UFBTN7\nLfCQu+9O7LoCeAHwEuAE4H0lr7vBzHaZ2a5Dhw5Vk1kREQHqLSmcC7zOzPYDnwLON7Md7v5gqCJ6\nErgWeGk4/gHglNj5q0LaDO6+zd3H3X18xYoVNWZfRGThqS0ouPsV7r7K3ceANwG3uPtbWu0EZmbA\nRcDd4ZTrgYtDL6RzgMfc/cG68iciIrM1sRznpJmtAAy4A3hHSN8JrAP2AUeASxrIm4jIgtaTwWvu\n/mV3f214fb67/5K7v9Dd3+Luh0O6u/tl7v7csH9XL/ImInPD5CSMjcHAQPRzcrLpHM1PGtEsIrk2\nbYKhITCLfm7a1NvPn5yEDRvgwAFwj35u2KDAUAcFBRFpa9Mm2LoVjh2L3h87Fr3vZWC48ko4cmRm\n2pEjUbpUy9y96Tx0bHx83HftUi2TSJ0GBqKn8yQzeDo5Amke52E+MbPd7j6etk8lBRFpK+u5sZfP\nk6tXl0uXzikoiEjf27wZliyZmbZkSZQu1VJQEJG+NzEB27bB6GhUZTQ6Gr2fmGg6Z/OPgoKItLVx\nY7n0ukxMwP79URvC/v0KCHVRUBCZ4+ruv79lSxQABgej94OD0fstWzq/psYc9C8FBZGa1dnHP63/\n/iWXwIknVnvD3bIFjh6NPuPo0e4DgsYc9C91SRWpUauPf1K3T9otY2PRTbWdJUv6q/49K8+jo1G1\nkNSvXZdUBQWRGg0NTQ/6ihscjJ64u5XVfz+pn264GnPQPI1TEGlIWkBol15W0X76993X3efkVYGV\naSPQmIP+pqAgUiOzcullpfXfT9PNDTdvmouybQQac9DfFBREalTFaOB2T+nJ/vsjI7Bo0czzu73h\nfvSj7dPLzkukMQf9TUFBFrSmZ//MU2Qyunj//Ycfhksvndl9dP367m64eYEtq2qqXZWVxhz0LwUF\nWbB6Mftn6+ZcND1p27Zy6ZOTsH37zN9p+/Z6u3uqjWB+UVCQBavsDbcTGzaUS08q21DdxBTTaiOY\nX2oPCmY2aGbfNLMbwvtTzezrZrbPzP7WzBaF9OPC+31h/1jdeZOFre6eQdD9aOCyJY1OqnLy5E1z\nMTERVVFVWWUlzelFSeFy4J7Y+z8GPuzuzwN+DFwa0i8FfhzSPxyOE6lNt1U7RXUzGrhsSaOOqpy8\nwNZElZXUp9agYGargNcAHwvvDTgf+Ew4ZDtwUXh9YXhP2L82HC9Si26rdnrh3HOjBvC4oaEoPU1W\nVc66dd3NNdQusGlVtPml7pLCXwDvBVrjFEeAR929NZbzIHByeH0ycD9A2P9YOF6kFnVM9Fa1K6+c\nPfL56NGZN9z4wLErr4yqbuLdPdevj57c65prqI4qK2lObUHBzF4LPOTuuyu+7gYz22Vmuw4dOlTl\npWUBqnKitzrk3XDTBo5t3x6VGFrdPXfurPdJXr2P5pc6SwrnAq8zs/3Ap4iqja4ClptZq0C8Cngg\nvH4AOAUg7H8W8Ejyou6+zd3H3X18xYoVNWZfpHl5N9wiVTd1P8nX1fvojDOi0k5rO+OM7q4nxdQW\nFNz9Cndf5e5jwJuAW9x9ArgVeH04bD3w+fD6+vCesP8Wn8uz9YlUIO+GW+SGX/eTfB0jlM84A/bu\nnZm2d68CQy80MU7hfcC7zWwfUZvB1SH9amAkpL8beH8DeRPpK3k33CI3/F6MI6h6hHIyIOSlLxQ9\nGYHv7nN2O/vss12kSTt2uI+OuptFP3fs6P3nL1niHrUoRNuSJbPz0XQ+y4r/Psltodq4Mf372Lix\n/LWAXZ5xX9WIZpEO9cMKYkWrbpJP8qDlMOeaXozAB01zIdKxudo/v45gVnWj8Jo15dIXgl6MwAcF\nBZGONdU/P37zNYO3vCX/Bh8fy7B+fflgdsEFMz/zggum99XRKLxnz+wAsGZNlL5Q9WoEvoKCSIea\n6J9fZIx/8gafLBlkPVlmrfV8wQVw880z026+eTow1NUovGfPzNrzhRwQoHcj8BUURDrUz7ODxksr\nadVcabKeOJMBIS9d6tGrEfgKCiId6ucVxOKllaLVWVXXTUv1ejECX0FBZJ5JllaKVmeNjtaTH5lb\nFBREOtQPXVLjskoradVcadatS09fu7ZcusxtCgoibcR77ST78zfRJbXdeslZo4mT1VxZbQc7d6an\n33TT7ACwdm2UDr3rFSO9oaAgkiGvJNBUl9TkmNaNG/OnPogPXnv66dn7oX2+b7pp5me2AgJU1yum\nJ1M4SL6soc5zYdM0F1Kn0dH0aQVGR6P9IyPp+0dG6s3Xxo3ug4Ptp4JoN/VB3u/VibVrZ15r7dry\nv1NVUzhIPjTNhUh5/bh4zKZNsHVrfk+hrVuzp7Couivt5CTcdtvMtNtum/m57arhoHdTOEgBWdFi\nLmwqKUid8p6ozdL3m1Wbj/hkdu1KB1lb3RPkZX1Pg4PR9UdG3Bctap8nTYDXW6ikIFJe3hN1VlfP\nE06obrK5ZLtGJ44cgcsvn5knaD/VdbtpLZKyRkIfOxbl+ZFH4KmnZucp3iCvxuo+khUt5sKmkoLU\nrd0Tddq01cPD+U/FZWQ9hXe7tctTsn0gr52g0zzES1RlP1O6Q5uSgnmnjx99YHx83Hft2tV0NmQB\nm5yMnnjvuy8qORw+HD0ZJ42OTk9ZXcbAQOclhDyDg1FJYfXqqPTTKi3kza80OBiVXlqjaYvMx5Qm\n/p2MjaWXODr93qQ9M9vt7uNp+1R9JNKF5DoFP/pR+nHtGqfbdcWsc3K9VvXOgQPwtrcVr+Y6dixq\nyG7ls5MqnmTDdj826i9UtQUFMzvezL5hZnea2R4z+2BIv87M7jWzO8J2Zkg3M/uIme0zs7vM7Ky6\n8iZSl6VLy6UnexMlb7jPe171eUzz1FNRu0MZrZ5Bp5+ef+zwMIyMZI+6bmLGWUlXZ0nhSeB8d38R\ncCbwKjM7J+z7PXc/M2x3hLRXA6eFbQOwtca8iVQi2dXy8OH047LS87pifvnLXWawhFa1V9HpK1qB\n7J57so9pBYFrr4WHH85u2O7nGWcXmtqCQmjPaP0pDIetXe3ohcDHw3lfA5ab2cq68ifSrbQRz2Xl\nrabVbjxCqzl2x478KSxGRqaPyZM2rUWa1me1a/PICgJJ/Tzj7EJTa5uCmQ2a2R3AQ8CN7v71sGtz\nqCL6sJkdF9JOBu6PnX4wpIn0TJmpFoquU9BOXlfMIl01v/pVOHgwujk//XSU77glS+Cqq6bbPkZG\n0q8ZT49Pa7FxY/rxVS/ukmyfUUBoRq1Bwd2PufuZwCrgpWb2QuAK4AXAS4ATgPeVuaaZbTCzXWa2\n69ChQ5XnWRauvPr9pE5KBklZ9fGt9Kwb77Fj02MI4nl2j+bZX7Zs5hM3TFdzwexgMzwcBY40eYu7\nHH98+nlZ6dLfetYl1cw+ABxx9z+LpZ0HvMfdX2tmfwV82d0/GfZ9BzjP3R/Muqa6pEqVhobSq2sG\nB6MbbdHj0wwMZF87bYK6+PGbNkU39jKL4MTz3Krmipdqhofhmc+Mekslu6SWdeKJ6d1wR0aidgTp\nP410STWzFWa2PLxeDLwC+HarncDMDLgIuDuccj1wceiFdA7wWLuAIFK1vPr9oulpsmYmLZIeX22r\nqHje0qq5fv7z6EbuHlU9ffWrxa+dlNUNNytd+ttQ/iEdWwlsN7NBouDzaXe/wcxuMbMVgAF3AO8I\nx+8E1gH7gCPAJTXmTWSWwcHsG32rgXbNmukF5EdHi1ch9XpVs3j1UF5f/1Y1GXS2vGNWSUpTVMxN\ndfY+usvdX+zuv+zuL3T3Pwzp57v7L4W0t7R6KIVeR5e5+3PDftULSe3iDctFnvz37oUzzohep3Wj\nHMj4i+rVeIOWeFtE0b7+nc5ImhYQ2qVLf9OIZulY3nTI/Z6HrGmo87pt7t0b/UzrRplVxVPVeIPl\ny9vvTzYCQ/HlOMtUh8k8ljUp0lzYNCFec9Img+tm4rcm8pC1UM3gYLS/k+mcy55T9vhOF6MpMv12\n6/cuS9Nezz1oQjypWj9MYNZtHtqVCNzz96cp24Op7GeUvX6aVgkpKVnCKKqT70ma1XXvo9CT6D+Z\n2TYzu6a1VZtNmUv6YQKzbvOQNzBszZr0/fH0ZPXVeeeln1PVQK8qekKde+7sto+BgSi9E1mD27LS\npb8VbVP4PPAs4CbgC7FNFqh+mMCsSB7atTnkLTi/Z8/swBDvfZQ2zcVtt80+Z+3a7CfwrKfsrPQq\nFqO58srZXWGffnrmojdJ/dB+JD2SVa8U34A7ihzX601tCs2ZC20KRfK4ceN028LgYLmF4rMWwEnW\n27f7XnrVphBXdhnRvO8xr21G+g9t2hSKBoX/BqwrcmwvNwWFZnVzQ61Ku5XR8tZY7vb6ZdZMzvrM\nTvLY7fde9jPzjldD89zTLigUrT66HLjBzH5mZo+H7Se1FF1kTpichO3bZ84TtH17f1UrdNvmkFY9\ntGHD9O9Ypqos6zM7mTI6PsL56NHyjcPr1pVLz/sey1aBSZ/LihZzYVNJoTlVPIV3K69aY+nS9Dwu\nXVrs+nm/444ds9djbtfdM6204d77ElcTJYV2JS7pPbqtPoquweuAPwvba4ueV+emoNCcsvXSRZS9\ncdRdrZF3/o4d7sPDM9MHBvIDRbLdI3mN4eH2v3va8WVU3aZQ5HtKfqaZAkOTug4KwIeAm4G3he1G\n4L8XObfOTUGhOVWXFDppuM67udUdFLK+g5GR6eCW1Qjb+p5GRrKvkSYZEDoJDJ3827UL2HnfU1aQ\nXLSoeJ6lWlUEhbuAgdj7QeCuIufWuSkoNKfq3kdZN6p21S5NlxSKPHHnXaNsHrv9ndzTq70WLer8\n367u4CzVaxcUysx9FJ915Vmdt2LIfFD18olZjZnHjkW3j2QjLzS/rm+RcRJVjCuoQ/Rsl/2+jHe8\no1y69LmsaBHfgDcDB4DrgO3AvcBvFzm3zk0lhfkj66k/r4qjm2qNPHnnFyktNVFSyGu4rqOTQLvP\nVEmh/1BRQ/NKosbm1wH/uuh5dW4KCvPHjh1RI22RwFC0p06R6p12QWXNmvTz16wpdr579VVceW0K\nRQa31dFJoJ21a9M/b+3aej5P8nUcFIAXhJ9npW3tzu3FpqAwf2TdzIpsWYFh2bL045cti/YXqVtP\nBoZ4QCii2547adr1PsoKrAMDxb+XOiQDgwJCs7oJCtvCz1tTtlvanduLTUGhWVX2Pc/qpVO05JAm\n74ZbtudPUcnvZePG+qq4yv7O7u1HYmscwcJQSfVR2Q04HvgGcCewB/hgSD8V+DrRspt/CywK6ceF\n9/vC/rG8z1BQaE7VvY86DQjtbqB1rJeQp+z30kRQKPJ99noeK+mtdkGh6NTZbzCzZ4TX/9nMPmdm\nL8457UngfHd/EXAm8CozOwf4Y+DD7v484MfApeH4S4Efh/QPh+OkT6UtBn/kSPuZNtvppjdO1rlV\nTDNdVtXfS1lFppwo8l33Ms/SX4p2Sf0v7v64mb0cuAC4GvhouxNCQDoc3g6HzYHzgc+E9O3AReH1\nheE9Yf9aM82e0q+yFqwvupB9UjfrDWSdu2xZ+/SRkfT9WelFZHWtPXCgummn4+tKDw1F71uiQvds\n8fSsNR+Serk2hvSPokGh9Wz1GqJ2hi8Ai/JOMrNBM7sDeIhoFPT3gEfdvbVG1EHg5PD6ZOB+gLD/\nMaCLP0+pU9X979MWfkmzbNn0ZwwORmsV7NyZfsP96U/Tr9FKv+oqGB6euW94OEovKnmDXro0+1j3\nKDhccknngSG5rvSxY9H7eGDIs29fseN6uTaG9JGseqX4BtwA/BXwfaJBbMcBdxY5N5y/nKhx+uXA\nvlj6KcDd4fXdwKrYvu8BJ6ZcawOwC9i1evXqOqrbpIAidddlGqKLjlOA6WuOjMzuPVS2Z083jeVZ\nPaaGhvJ/h1Zjdi/bSfLWaO6mTUET3s0tVDDNxRLgt4DTwvuVwCuLnBu7xgeA3wMeBoZC2q8AXwqv\nvwT8Sng9FI6zdtdUQ3Nz8nruVNngWnarcp7/xYtnnrd48fS+rBt068aYdwMu8j2W+Z6q+B47ual3\nMqmfNKtdUChafbQS+IK7f9fMzgPeQNSzKFNY13l5eL0YeAVwTygxvD4ctp5oqU+A68N7wv5bQual\nDz36aPv0Jhtcu6kLj1cHmcETT8zc/8QT01NrZDVYu8P+/bOXvEzzs5+VS6/b009HeS8zXcnll8PP\nfz4z7ec/j9Jl7ikaFD4LHDOz5wHbiKp9/ibnnJXArWZ2F/AvwI3ufgPwPuDdZraPqM3g6nD81cBI\nSH838P5Sv8k8U/WauO0aJzuR17On2wVuutFpXXiyvj5LK1BU0a6S1+4xFzzySLl06XNZRYj4Btwe\nfr4X+N3w+ptFzq1zm6/VR1WPAahiXd+kvGqMsvPrVFV11M1o4TID6Ip+r91U93TyvXf7/XWi6utJ\n/aigTeHrRJPi3Q2cGtLuLnJundt8DQpVT1hWx8LqeTeCXrcpVDFauJObZ97kc3ltBlUHhaz/O0Ua\nmDudeqKukeFSn3ZBoWj10SVEjcKb3f1eMzsV+ER15RWJq7rqpYlBXFVPrZ2nk7rwTi1ePP363HNh\n1arod1y1KnofV0W317iNG9unZ00nfv75M7vyPuc5M49ZuxZuuqmzPF11FSxKdFBftKjz31EalhUt\n5sI2X0sKVT95FZkkrayqqwy6mfso6zPLfo9Fnqbj31nR0lC77pqdzCCaVzpJm3upyurINOqSOrfQ\nxYR4nw4/v0W0+lpr+xZaea02VQeFbhewT1N1UOgmIGR9ZtkbbtHPat2EiyzHmXeDrKO9J6mO9RNk\nbmsXFCzan87MVrr7g2Y2mlHK6HBSg2qMj4/7rl27msxCLQYGoj/bJLNi3Rzrvl7r3Cxt/ktlesYz\n4PDh/OPKfObQUHoV2eAgHD1a/Pis87O+16QlS7KrzsrmEaJeUtu2RecNDkbTfGzZkv35dfz7y9xm\nZrvdfTxtX9s2BXd/MPw8EALAj4HHY5vUoMgyj01erw51dMEs25ZSdP6l1vlFv7924zPK5rGTaS56\n8e9fdRdqaVBWESK+AW8HfgDsJ1qK817g+0XOrXObr9VHVS+sXkXdd1K/VR+1tvgiOJ30uorX12dt\nrfPTvtey30vZPHbyO1XdxbnX15fqUUGX1O+SMg9R09t8DgpVTxuQd8Mv+5mdBIVO11PuNDB0Ul8f\nDwpZDc/x85O/U1ajftZNu2weOw3GdTYEq81i7qkiKHwRWFLk2F5u8zUoNPFHVvUcPEndLEvZydaS\n11MnLm9J0LzzO/leyuaxjjEn3er1ms/SvXZBoW1Dc0tYUOdaokFsT8aqnv5DZfVYHVBDc3XKNhwX\nOX5yMqpLv+++6HdKqycfHY3GF1S9ckaB/9azVNF4vmxZevvI0qXdNaS3nHEG7N07O33NGtizp/vr\nd2JsLH0djda/rfSfjhuaY/4KuAX4GrA7tkkNkoOP8tL70eRk1HB74EB0Q81qOO10UZ5+lZwEMC+9\nrO98p1x6L2QNmNu8uZn8SHeKBoVhd3+3u1/r7ttbW605W8CSM3PmpVeh6lXI0mZJTdPNMpxZ1qyp\n/ppFZZUo2pU0yvTcaWJ0ep5ej16XehUNCn9vZhvMbKWZndDaas3ZApZVRVRnn/KqpyooWgKo+mbW\nTTVKkfWNqzY5Ga3E1ipR5a3MVvWKd1WZmJieLrxX041IPYoGhTcDVwD/zHTV0fyrzJ9Hkk+fmza1\nfxqdmIBrrpn5tHfNNZ3/cRe9SXWzHnJcq3kzGRDKPIW/4x3l0qtQdi2CrLEU3axxLTJDVgv0XNjm\na++jTrsdthTpPz8w0F23xLw8Fu0lVGS20CJbWlfLTvrPl+kJ1Mn30u3xVeSxDpr7aG6hi7mP3ht7\n/YbEvj9qd24vNgWFdEXXO65z7qOs/vrdBpG8LT7Ir4muvb0ICv1Gg9fmnnZBIa/66E2x11ck9r2q\nosKKJHTb6Fu0Pr/O1b3KtH8MFK3ELOCpp6arXppY/a3sv13VDfxNaHLpVale3p+jZbxOez9zp9kp\nZnarme01sz1mdnlI/wMze8DM7gjbutg5V5jZPjP7jpn9RqnfZB5ZaPPTRwXP6rSWgWxizqey/3bz\n4d+6yaVXpQZZRYiohBEtw5l8nfY+5dyVwFnh9TOA/wusAf4AeE/K8WuAO4HjgFOB7wGD7T5jvlYf\nuXdXR1u0qiW5nkKVcx8VWZugzq31+zRRrVH2326u18drmou5hzbVR0M5MeNFZvYTolLB4vCa8P74\nnGDzINCaZfVxM7sHOLnNKRcCn3L3J4F7zWwf8FLgtpw8Sofe/vbp163BZq1qgAMHpnu0dNIDqeqn\n/0608t0aVb16dTSgqu7ukhMT5T6j7PH9ZvPmmf93QIPX5rSsaFHlBowB9wHPJCop7CdarOca4Nnh\nmL8E3hI752rg9e2uO19LCjt2zH7SNiv+BJn3FJ3WY6Xs017eU3rWXEq9LCksVE2UPOZ6aWehodu5\nj7phZsuAfyRa3/lzZnYS8DDgwH8FVrr728zsL4GvufuOcN7VwN+7+2cS19sAbABYvXr12Qfm2zwJ\nwHHHRQ2mSYsWwZNPzk5P6mQOn7LzLeV9xoknTtftN6EfSipNSJb4oP0iP7IwVTH3UacfPAx8Fph0\n988BuPsP3f2Yuz8N/DVRFRHAA8ApsdNXhbQZ3H2bu4+7+/iKFSvqzH5j0gJCu/QqVN0o+6MfdZ4X\n6Zx6Akm3agsKZmZEVUD3uPufx9JXxg77TeDu8Pp64E1mdpyZnQqcBnyjrvzJTFVPanaCJkFphHoC\nSbfqLCmcC7wVOD/R/fRPzOxbZnYX8OvAuwDcfQ/waWAv0foNl7l7g9N8zU9m0brAyeUbezWp2cBA\nvXMJLXRzYelV6W95vY865u5fIX0sw84252wG1GehZq11faH9gu/tHH88/Oxn6emQXX3kHrVR1BkY\n5tLAr6qpJ5B0q9Y2BWlG0amjt22bfj05CRdfPHO2zosvzp5A7hd+oX16U0+sw8Nza+BX1TSNtXRL\nQaEGZWbmrEPaylxp4tNWv/3ts3sZPf30zLEMRT6jlb5uXfr+rPRuLFs2fQO89lrdADWNtXSjtuqj\nharqQWBJAwP1DMLKmgep0/mRdmZUEmald+OJJ+pda0JkIVFJoWJ1dwlsVe1s2NB9CaTOev1e9oJp\nctUxkflGQaFivboZVhFo6hzg1cs2haZXHROZTxQUKtbLm2E/9z3PG/dQ5Y1cq46JVEdBoWK9bGDt\n577neb1gTj+982u3AsrgIGzc2Hm3WhGZrfa5j+o0Pj7uu3b111LRWXP+jIzAww8Xu0aRuv5289mU\naSto/fNXPfdRnqGhztoCis7/JCLZGpv7aCHKmgSuqsnh6up73utF6zttHP7VX602HyIyk7qkzjF1\ndb1sVcFs2xbdsAcHo7r6uqpmBgc7Cwxf/nLlWRGRGJUUGrJpU1SFkjUXURO2bIGjR6Pqn6NH662r\n77RxWN1PReqlkkLFzLLr5ls2bZqeewiqmYuo14r8nu0kSyZFqfupSL1UUuhAu2ksshpZ4+nxOYfi\nstJ7pUzp5Rd/sVx6mnjJ5DnPKXaOup+K1EslhZKqmMYi68m4yaqRsqWXe+5Jv05Wep7h4fb7627j\nEJGIuqSWNDYWBYKk0dFo8rEiXTWzumMODkZPzt129+ykS2pensp8Rif/paq+nohkU5fUCmUtCV1m\nqejzziuXXpfFi6dfN116yWorUBuCSG8pKJRUxc3rjjvKpdfliSemX5f9vZYtK5eep+mgJCKROtdo\nPsXMbjWzvWa2x8wuD+knmFk3MukAAA+rSURBVNmNZvbd8PPZId3M7CNmts/M7jKzs+rKWzequHnV\nPcCtE1kNuFnpH/1oVOUUNzQUpXdidLRcuojUo86SwlHgP7r7GuAc4DIzWwO8H7jZ3U8Dbg7vAV4N\nnBa2DcDW2Zds3ly4eS1fXv6cLVuieYSKzis0MQHXXTdzbqPrrut8lHUv54wSkWy1BQV3f9Ddbw+v\nHwfuAU4GLgS2h8O2AxeF1xcCH/fI14DlZrayrvx1ai7cvB59tLPzyg5eq3KFr14uyiMi2XrSpmBm\nY8CLga8DJ7n7g2HXD4CTwuuTgftjpx0MaX0l6ya1bVs0bkE608tFeUQkW+23MTNbBnwWeKe7/yS+\nz6P+sKU6HJrZBjPbZWa7Dh06VGFOi8nqZXTsWG+6Tja17nPderkOhYhkqzUomNkwUUCYdPfPheQf\ntqqFws+HQvoDwCmx01eFtBncfZu7j7v7+IoVK+rLfIamu0hWuRxnP8lblEdEeqPO3kcGXA3c4+5/\nHtt1PbA+vF4PfD6WfnHohXQO8Fismqlv9EsXySrXfe5Uu+k+ypqYgPXrZzZ0r19f7fTgIpKvzpLC\nucBbgfPN7I6wrQM+BLzCzL4LXBDeA+wEvg/sA/4a6IN5Q/tbVn370qXFzi8z8jmpNd3HgQPVlF4m\nJ6PurK2ge+xY9H4+lYZE5gJNc1FSNzfS1ledN6VD0c9oTa2RdMEFcPPN+ecvXQqHDxf7rKS86T7K\nOv749BXVjjsOfvaz8tcTkWya5mIealfffsstxa7x0592/vlV9xbKWmJTS2+K9JaCwhxTZDnOXhT+\n1FtIZH7S1NlzTF3LcZa1efPMKcRBvYVE5gOVFOahbto9ipqYiEor8Wku2pVe8qxdWy5dROqhhuaS\nmm5ornI9hZERePjhYsf2QrKBfO1auOmm5vIjMl+poXmBKTo53xvfWG8+ynr+82eOU3j+85vNj8hC\npKAwD6WNDk7z8Y/Xn5eiWsuBxscpbN3afp1oEamegsI8lKzvz9JNl9SqbdtWLl1E6qGgME/Fp7We\nC7Tymkh/UFBoQNY0FK30qnviZJUWetFLSUTmFgWFHomvhpZ3k963L31/VrqISFUUFHrkWc+afp01\n31ArPWvNhqz0PFndWPupN/JcWOZUZCFQUOgRrSDWntZTEOkPCgopNm2CoaGoOmdoqJpukSec0P01\n5rOqR0iLSGc091FCq798S6u/POQvZN+v1q5Nn0q736aQmJhQEBBpmkoKCXn95UdGOrvuj37U2XlV\nuOmm2QFAU0iISBoFhYS8/vKdTg3R9JTSN90UNSy3NgUEEUlT5xrN15jZQ2Z2dyztD8zsgcTynK19\nV5jZPjP7jpn9Rl35gvZrC7fm3klqpe/cWf7zhodnNpjmdUldtCh9f1a6iEhV6iwpXAe8KiX9w+5+\nZth2ApjZGuBNwBnhnC1mlnF77k7e2sIbNqSf10rvpBdRMgjkdRG95prZ55hF6SIidaotKLj7PwFF\na9IvBD7l7k+6+73APuCldeTryitnLgwD0fsrr4xeb9kCGzfOnK1z48bpRuasaqDBwejGnVbSeOqp\n6etDfp/8iQn4xCdm9sT5xCfUCCsi9WuiTeHfm9ldoXrp2SHtZOD+2DEHQ1rliqwtfO65sGpVdENe\ntSp635LVn3779mieoay5huLXL9InPz530f79Cggi0hu9DgpbgecCZwIPAv+j7AXMbIOZ7TKzXYcO\nHSqdgawppVvpedVLaf3p16+PSgIDA9GWJl7CKNInv127RxHdni8iC5S717YBY8DdefuAK4ArYvu+\nBPxK3vXPPvtsL2tgIN4HZ3obGIj2j46m7x8cdDeL9u/YMX29HTvclyxJP6e1LVky85w8adcsc40d\nO9wXLZp5/qJF5fIgIvMXsMsz7qu1LsdpZmPADe7+wvB+pbs/GF6/C3iZu7/JzM4A/oaoHeE5wM3A\nae7eduLkTpbjzFvqcmAgf06gJUumn+zHxtLnJBocjKp+Vq+OqoXKVP9kXXN0NKpKynPiifDII7PT\n+235TRFpRiPLcZrZJ4HbgNPN7KCZXQr8iZl9y8zuAn4deBeAu+8BPg3sBb4IXJYXEDqV1+W0yHiC\neMN0VhtFq32hk/aAIu0e7aQFhFZ6lVN3iMj8U2fvoze7+0p3H3b3Ve5+tbu/1d1/yd1/2d1f1yo1\nhOM3u/tz3f10d//7uvKV1+V03br0/UmtG3RWEOlmsFrWPElVzZ+kpS5FJMuCG9Gc1+W06OC01k0/\nK4gUDS51KDoVh5a6FJGkBRcUIAoAR49GbQdHj86c6K5IFU28+2hWEOlk5HNL1jxJRedPuuqqaBR1\nHi11KSJJCzIotJM3OC3ZfbTb+v8yeShaJTUxAddeO93lNUtW+4qILFwKCgl5g9OSDced3sDbjSOo\nYsGZ+OC3rCmyzzuv+PVEZGFQUEgou9hLJzfwTgbIdbPgjNZ8FpGiFBRSlJliopMbeN78S1Wro4pL\nROYnBYUOJKt+oNw8RWkD0+LpeSWJsuroNisi85OCQklV3LDzBtBVXZKooo1CRBYGBYWSqrhh563u\nVnV1T9VtFCIyfw01nYG5poob9uho9txGEFXrpO3vprpnYkJBQETyqaRQUhX183nVOaruEZGmKCiU\nVNUYgnbVOaruEZGm1Dp1dt06mTq7CpOTURvCffd1NjW2iEiTGpk6ez6rYqnMvJXRtHKaiDRBQaEC\nZW/ged1aqx6nICJSlKqPutS6gce7qcZXZkuTt7JatyuviYi00676SEGhS53cwLOW/DSLqqTy9ouI\ndKOp5TivMbOHzOzuWNoJZnajmX03/Hx2SDcz+4iZ7TOzu8zsrLryVbVOxi3kdWvVtBQi0pQ62xSu\nA16VSHs/cLO7nwbcHN4DvBo4LWwbgK015qtSndzANU5BRPpVnWs0/xOQXCvsQmB7eL0duCiW/nGP\nfA1YbmYr68pblTq5gWucgoj0q15Pc3GSuz8YXv8AOCm8Phm4P3bcwZD2IH2udaMuO24hb9oJTUsh\nIk1obO4jd3czK93KbWYbiKqYWN0nley6gYvIfNHrcQo/bFULhZ8PhfQHgFNix60KabO4+zZ3H3f3\n8RUrVtSaWRGRhabXQeF6YH14vR74fCz94tAL6RzgsVg1k4iI9Eht1Udm9kngPOBEMzsI/D7wIeDT\nZnYpcAB4Yzh8J7AO2AccAS6pK18iIpKttqDg7m/O2LU25VgHLqsrLyIiUozmPhIRkSlzepoLMztE\nVA3VqROBhyvKTl2Ux2ooj9VQHqvRdB5H3T21p86cDgrdMrNdWfN/9AvlsRrKYzWUx2r0cx5VfSQi\nIlMUFEREZMpCDwrbms5AAcpjNZTHaiiP1ejbPC7oNgUREZlpoZcUREQkZkEGhbQFgPqJmZ1iZrea\n2V4z22NmlzedpyQzO97MvmFmd4Y8frDpPGUxs0Ez+6aZ3dB0XrKY2X4z+5aZ3WFmzS4nmMHMlpvZ\nZ8zs22Z2j5n9StN5ijOz08P319p+YmbvbDpfSWb2rvA3c7eZfdLMjm86T3ELsvrIzH4NOEy0hsML\nm85PUpgscKW7325mzwB2Axe5+96GszbFzAxY6u6HzWwY+ApweVgPo6+Y2buBceCZ7v7apvOTxsz2\nA+Pu3rf9681sO/B/3P1jZrYIWOLujzadrzRmNkg0qebL3L2bsUyVMrOTif5W1rj7E2b2aWCnu1/X\nbM6mLciSQsYCQH3D3R9099vD68eBe4jWl+gbYUGkw+HtcNj67gnDzFYBrwE+1nRe5jIzexbwa8DV\nAO7+VL8GhGAt8L1+CggxQ8BiMxsClgD/r+H8zLAgg8JcYmZjwIuBrzebk9lCtcwdRFOg3+jufZdH\n4C+A9wJPN52RHA78g5ntDmuG9JtTgUPAtaEq7mNmtrTpTLXxJuCTTWciyd0fAP4MuI9oEbHH3P0f\nms3VTAoKfczMlgGfBd7p7j9pOj9J7n7M3c8kWv/ipWbWV1VxZvZa4CF33910Xgp4ubufRbRe+WWh\nirOfDAFnAVvd/cXAT5leY72vhKqt1wH/q+m8JJnZs4mWHz4VeA6w1Mze0myuZlJQ6FOhnv6zwKS7\nf67p/LQTqhFuBV7VdF4SzgVeF+rrPwWcb2Y7ms1SuvAEibs/BPwd8NJmczTLQeBgrDT4GaIg0Y9e\nDdzu7j9sOiMpLgDudfdD7v5z4HPAv2k4TzMoKPSh0Ih7NXCPu/950/lJY2YrzGx5eL0YeAXw7WZz\nNZO7X+Huq9x9jKg64RZ376unMgAzWxo6FBCqZF4J9FXPOHf/AXC/mZ0ektYCfdPxIeHN9GHVUXAf\ncI6ZLQl/52uJ2gz7xoIMCmEBoNuA083sYFj0p5+cC7yV6Mm21b1uXdOZSlgJ3GpmdwH/QtSm0Ldd\nPvvcScBXzOxO4BvAF9z9iw3nKc3vApPh3/xM4I8azs8sIai+gugJvO+EktZngNuBbxHdg/tqdPOC\n7JIqIiLpFmRJQURE0ikoiIjIFAUFERGZoqAgIiJTFBRERGSKgoIsGGZ2LDGLZscjcs3sn6vMW+La\n42b2kbquL9KOuqTKgmFmh919WdP5EOlnKinIghfWMvigmd0e1jR4QUhfYWY3hrnvP2ZmB8zsxLDv\ncPh5npl9ObbOwGQYqYqZnW1m/xgmuftSmBI9+dlvCPPq32lm/xS75g3h9c5YyeYxM1sfJiL8UzP7\nFzO7y8ze3qvvSuY/BQVZSBYnqo9+O7bv4TAh3VbgPSHt94mmxjiDaBTq6ozrvhh4J7AG+AXg3DB3\n1f8EXu/uZwPXAJtTzv0A8Bvu/iKiSdxmcPd1YdLBS4EDwP8Orx9z95cALwF+x8xOLf41iGQbajoD\nIj30RLjBpmlNi7Ab+K3w+uXAbwK4+xfN7McZ537D3Q8ChKnEx4BHgRcCN4aCwyDRVMlJXwWuC4ut\npE7NEEonnwDe6O6PmdkrgV82s9eHQ54FnAbcm5E/kcIUFEQiT4afxyj/d/Fk7HXrfAP2uHvbJSvd\n/R1m9jKihYB2m9nZ8f1hBbFPAX/o7q1J8gz4XXf/Usl8iuRS9ZFItq8CbwQIT+fPLnHud4AVFtYx\nNrNhMzsjeZCZPdfdv+7uHyBaxOaUxCEfAu5y90/F0r4EbAxVVJjZ8/t8wRuZQ1RSkIVkcajeafmi\nu7frlvpB4JNm9laiWXV/ADxe5IPc/alQvfORsJTlENEqcHsSh/6pmZ1G9PR/M3An8G9j+98D7Inl\n+wNES4uOAbeHRu1DwEVF8iWSR11SRTKY2XHAMXc/Gp74t7ZpkxCZF1RSEMm2Gvi0mQ0ATwG/03B+\nRGqnkoKIiExRQ7OIiExRUBARkSkKCiIiMkVBQUREpigoiIjIFAUFERGZ8v8BRij2loO29g4AAAAA\nSUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AI0iHdlTNwKr",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#Here i am spilting data into train and test. Train set is 80% of data and test set is remaining 20%\n",
        "msk = np.random.rand(len(df)) < 0.8\n",
        "train = cdf[msk]\n",
        "test = cdf[~msk]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NhRv6R_lOK2c",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "outputId": "7450db6d-52e8-4758-ef0f-a8dbf0ab9896"
      },
      "source": [
        "#Train data distribution\n",
        "plt.scatter(train.ENGINESIZE, train.CO2EMISSIONS,  color='blue')\n",
        "plt.xlabel(\"Engine size\")\n",
        "plt.ylabel(\"Emission\")\n",
        "plt.show()"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nFoM4Xl4pJEQkLwWFFlnj5TsdffSTn3R2XBluuOHoAKAUEiKSREGhRdZ4+U5TQ9SdUvqGG6L+g8am\ngCAiSapco/kqM3vUzO6Klf2ZmT3Usjxn473LzGy3mX3PzH67qnpB+7WFs8bLb99e/PtGRppTSqfd\nbTTK1dwjInWp8k7hGuDVCeUfcffTw7YdwMxWAG8CTgvHbDKzSqYtZa0tnDVevpOVxVpH/1xxBcyd\n21w2d25UDmruEZH6VBYU3P1fgLwt6RcAn3X3p939fmA3cFYV9br88uaFYSB6ffnl0fOs8fJpzUDD\nw9HJP+lO4+DB6c+HaBLaVVc1r0Vw1VXNk9PU3CMidaijT+Hfm9mu0Lz0nFC2FHgwts++UFa6PGsL\nb9oEhw5FJ+NDh5onUCVlIJ03D7ZujeYhpOUaav3eeG6iPXsGe7ayiMwcvQ4Km4HnAacDjwD/o+gH\nmNlaM9tpZjv3799fuALdri2ctOLYmjXRncDQULR18/kN7fo9enG8iMxOPQ0K7v4jdz/s7keATzDd\nRPQQcFJs12WhLOkztrj7SndfuXjx4sJ1SLvSb7e2cOsJFqav8jdujO4SGn0USaOXiq5dnNXvkef4\niy9uPv7iixUYRCQHd69sA8aBu2Kvl8Se/zFRPwJEHcx3AMcAJwP3AcNZn3/mmWd6J7Ztcx8bczeL\nHrdta7/vvHnx1v3odeOYsbHm9xrb8HC+z0+S9pljY/mOHx1NPn50tFg9RGQwATs95bxaWe4jM/sM\ncC6wCPgR8Kfh9emAA3uAd7j7I2H/y4GLgUPAu9z9K1nfUVXuo8nJqDnogQeiu4Okq/+xsehuYWgo\nOX9QPNdRUd1+ZrtcR2ZRU9bGjerHEJmt2uU+UkK8Fo2mm9YRSq0aJ+jx8ah5plUjaHRi0aLkFN2j\no/DYY9nH50naN29e1DeiwCAy+yghXgFJQ1aTNDqOV69Ofj+tvBfypOKID8MVEWlQUGiRZ3JavOM4\nbYZzJzOfG9LyJOXNn3TFFc3rN6TpZCKeiAw2BYUWWZPTxsaam13yzHsoqw5Fhs1effX0sNm01B11\n52MSkf6joNAia3Ja60SzTk/g7eYRdDJstlV8clxa6o46m7hEpD8pKLRImpzWrkO203kP7eYhFK1D\nliqauERkMCkoJCiSgqKTE3hW/qWyVdHEJSKDSUGhA+1mOOfJY5Q0hDVe3u2M5lbd9lGIyOyhoFBQ\n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\nSyCCAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "anljZJKlOSY3",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "95af7e69-94a2-4da1-debd-b593bb7761f8"
      },
      "source": [
        " #Multiple Regression model\n",
        "from sklearn import linear_model\n",
        "regr = linear_model.LinearRegression()\n",
        "x = np.asanyarray(train[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_COMB']])\n",
        "y = np.asanyarray(train[['CO2EMISSIONS']])\n",
        "regr.fit (x, y)\n",
        "# The coefficients\n",
        "print ('Coefficients: ', regr.coef_)\n",
        "print ('Intercept: ',regr.intercept_)"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Coefficients:  [[10.52776872  7.60236084  9.81775164]]\n",
            "Intercept:  [63.19284965]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5HCIR3alOzhT",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "9d6b31a5-c95b-4037-aa14-6c63a67b3b05"
      },
      "source": [
        "#Predicton\n",
        "y_hat= regr.predict(test[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_COMB']])\n",
        "x = np.asanyarray(test[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_COMB']])\n",
        "y = np.asanyarray(test[['CO2EMISSIONS']])\n",
        "print(\"Residual sum of squares: %.2f\"\n",
        "      % np.mean((y_hat - y) ** 2))\n",
        "\n",
        "# Explained variance score: 1 is perfect prediction\n",
        "print('Variance score: %.2f' % regr.score(x, y))"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Residual sum of squares: 510.21\n",
            "Variance score: 0.86\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j4UnT4NlQGuR",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "207d1749-1ae5-4578-efa3-bb63f3fb1371"
      },
      "source": [
        "# Trying to use a multiple linear regression with the same dataset but this time use __FUEL CONSUMPTION in CITY__ and __FUEL CONSUMPTION in HWY__ instead of FUELCONSUMPTION_COMB\n",
        "\n",
        "regr = linear_model.LinearRegression()\n",
        "x = np.asanyarray(train[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_CITY','FUELCONSUMPTION_HWY']])\n",
        "y = np.asanyarray(train[['CO2EMISSIONS']])\n",
        "regr.fit (x, y)\n",
        "print ('Coefficients: ', regr.coef_)\n",
        "y_= regr.predict(test[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_CITY','FUELCONSUMPTION_HWY']])\n",
        "x = np.asanyarray(test[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_CITY','FUELCONSUMPTION_HWY']])\n",
        "y = np.asanyarray(test[['CO2EMISSIONS']])\n",
        "print(\"Residual sum of squares: %.2f\"% np.mean((y_ - y) ** 2))\n",
        "print('Variance score: %.2f' % regr.score(x, y))"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Coefficients:  [[10.7032706   7.1827197   6.44501549  3.00130885]]\n",
            "Residual sum of squares: 510.22\n",
            "Variance score: 0.86\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "21GJpErVXf4-",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "10ff0baa-cb41-4c8e-b499-5e05b09bc667"
      },
      "source": [
        "#lets see the actual vs predicted values\n",
        "test = pd.DataFrame({'Actual': y.flatten(), 'Predicted': y_hat.flatten()})\n",
        "test"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Actual</th>\n",
              "      <th>Predicted</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>255</td>\n",
              "      <td>256.736802</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>239</td>\n",
              "      <td>247.758822</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>359</td>\n",
              "      <td>369.691941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>338</td>\n",
              "      <td>317.813198</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>359</td>\n",
              "      <td>369.691941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>201</th>\n",
              "      <td>264</td>\n",
              "      <td>253.294465</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>202</th>\n",
              "      <td>235</td>\n",
              "      <td>242.636941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>203</th>\n",
              "      <td>264</td>\n",
              "      <td>253.294465</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>258</td>\n",
              "      <td>252.454693</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>205</th>\n",
              "      <td>294</td>\n",
              "      <td>268.163096</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>206 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     Actual   Predicted\n",
              "0       255  256.736802\n",
              "1       239  247.758822\n",
              "2       359  369.691941\n",
              "3       338  317.813198\n",
              "4       359  369.691941\n",
              "..      ...         ...\n",
              "201     264  253.294465\n",
              "202     235  242.636941\n",
              "203     264  253.294465\n",
              "204     258  252.454693\n",
              "205     294  268.163096\n",
              "\n",
              "[206 rows x 2 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eWbl0__xZdpL",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}